#!/usr/bin/env python3
"""Test script to debug order placement"""
import asyncio
import json
import os
from mcp_skyfi.skyfi.client import SkyFiClient

async def test_order():
    # Test order details
    test_payload = {
        "aoi": "POLYGON((-97.7412185 30.2747904,-97.7411755 30.2747785,-97.7412175 30.2746656,-97.7411423 30.2746447,-97.7411457 30.2746356,-97.7410579 30.2746113,-97.7410545 30.2746204,-97.7409824 30.2746004,-97.7409508 30.2746852,-97.7408632 30.2746609,-97.7408654 30.2746551,-97.7407139 30.2746131,-97.7407117 30.2746189,-97.7406302 30.2745963,-97.7405756 30.2745812,-97.7406041 30.2745047,-97.7406113 30.2745067,-97.7406487 30.2744061,-97.7404644 30.274355,-97.7402809 30.2743041,-97.7402435 30.2744047,-97.7402494 30.2744063,-97.7402209 30.2744828,-97.7401585 30.2744655,-97.7400849 30.2744451,-97.7400871 30.2744393,-97.7399355 30.2743973,-97.7399334 30.2744031,-97.7398457 30.2743788,-97.7398773 30.274294,-97.7398051 30.274274,-97.7398085 30.2742648,-97.7397208 30.2742405,-97.7397174 30.2742496,-97.7396422 30.2742288,-97.7396002 30.2743417,-97.7395625 30.2743313,-97.7395196 30.2744465,-97.7394788 30.2745565,-97.7395165 30.2745669,-97.7394721 30.2746861,-97.7395474 30.274707,-97.7395441 30.2747157,-97.7396318 30.2747401,-97.7396351 30.2747313,-97.7397073 30.2747513,-97.7397401 30.2746629,-97.7398277 30.2746872,-97.7398248 30.2746951,-97.7399763 30.2747371,-97.7399793 30.2747293,-97.7400517 30.2747493,-97.7401555 30.2747781,-97.7401442 30.2748085,-97.7400688 30.2747876,-97.7400446 30.2748527,-97.7400365 30.2748504,-97.7399981 30.2749536,-97.7400063 30.2749558,-97.7399819 30.2750215,-97.7401045 30.2750555,-97.7401004 30.2750664,-97.7400879 30.2751002,-97.7401785 30.2751253,-97.7402692 30.2751504,-97.7402816 30.2751171,-97.7402858 30.2751057,-97.7404081 30.2751396,-97.7404325 30.275074,-97.740441 30.2750764,-97.7404794 30.2749732,-97.7404708 30.2749709,-97.740495 30.2749058,-97.7404174 30.2748843,-97.7404287 30.2748539,-97.7405239 30.2748803,-97.7406061 30.2749031,-97.7406031 30.2749109,-97.7407547 30.2749529,-97.7407576 30.2749451,-97.7408452 30.2749694,-97.7408123 30.2750578,-97.7408845 30.2750778,-97.7408813 30.2750865,-97.740969 30.2751108,-97.7409722 30.2751021,-97.7410475 30.2751229,-97.7410918 30.2750037,-97.7411347 30.2750157,-97.7411755 30.2749059,-97.7412185 30.2747904))",
        "archiveId": "bd683bcc-7f5f-458c-99ea-2e4f7ef3d70d",
        "deliveryDriver": "NONE",
        "deliveryParams": None
    }
    
    print("Testing order with payload:")
    print(json.dumps(test_payload, indent=2))
    print("\nNote: deliveryParams is None in Python, which becomes null in JSON")
    
    # Show what it looks like as JSON
    print("\nActual JSON that will be sent:")
    print(json.dumps(test_payload, indent=2))
    
    # Test with the API if you want
    if input("\nDo you want to test with the actual API? (y/n): ").lower() == 'y':
        async with SkyFiClient() as client:
            try:
                result = await client.order_archive(
                    aoi=test_payload["aoi"],
                    archive_id=test_payload["archiveId"],
                    delivery_driver=test_payload["deliveryDriver"],
                    delivery_params=test_payload["deliveryParams"],
                    estimated_cost=0
                )
                print("\nSuccess! Order result:")
                print(json.dumps(result, indent=2))
            except Exception as e:
                print(f"\nError: {e}")

if __name__ == "__main__":
    asyncio.run(test_order())